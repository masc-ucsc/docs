
// migen

from migen.fhdl.std import *
from migen.fhdl import verilog
class Blinker(Module):
  def __init__(self, led, maxperiod):
    counter = Signal(max=maxperiod+1)
    period = Signal(max=maxperiod+1)
    self.comb += period.eq(maxperiod)
    self.sync += If(counter == 0,
        led.eq(Ëœled),
        counter.eq(period)
      ).Else(
        counter.eq(counter - 1)
      )
led = Signal()
my_blinker = Blinker(led, 3000000)
print(verilog.convert(my_blinker, ios={led}))

// pyrope

pub let blinker = proc(maxperiod)->(led:boolean) {

  reg counter:int(0,maxperiod)
  reg led

  if counter {
    counter -= 1
  }else{
    counter = maxperiod
    led = !led
  }
}

test "blinker test" {
  let b = blinker(maxperiod=300000)
  puts "led is {}",b
  step 300000
  puts "led is {}",b
}
